name: openshift-playground-self-hosted-runner

env:
  # 🖊️ EDIT your repository secrets to log into your OpenShift cluster and set up the context.
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  # To get a permanent token, refer to https://github.com/redhat-actions/oc-login/wiki/Using-a-Service-Account-for-GitHub-Actions
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
  # 🖊️ EDIT to set the kube context's namespace after login. Leave blank to use your user's default namespace.
  OPENSHIFT_NAMESPACE: "mpbauer-cicd"

  # 🖊️ EDIT to specify custom tags for the container image, or default tags will be generated below.
  IMAGE_TAGS: ""

on:
  push:
    branches: [ main ]

jobs:
  openshift-ci-cd:
    name: Build and deploy to OpenShift
    runs-on: [ self-hosted, linux, x64 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.2
        with:
          maven-version: 3.8.3
      - name: Check Java Version
        run: java -version
      - name: Check Maven Version
        run: mvn -version
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: >
            [
              {
                "id": "some-repository",
                "name": "some-repository-name",
                "url": "http://some.repository.url",
                "releases": {
                  "enabled": "true",
                  "updatePolicy": "always",
                  "checksumPolicy": "fail"
                },
                "snapshots": {
                  "enabled": "false",
                  "updatePolicy": "always",
                  "checksumPolicy": "fail"
                }
              }
            ]
          plugin_repositories: >
            [
              {
                "id": "some-plugin-repository",
                "name": "some-plugin-repository-name",
                "url": "http://some.plugin.repository.url",
                "releases": {
                  "enabled": "true"
                },
                "snapshots": {
                  "enabled": "false"
                }
              }
            ]
          servers: >
            [
              {
                "id": "some-id",
                "username": "${env.USER}",
                "password": "${env.PASS}",
                "configuration": {
                  "httpConfiguration": {
                    "all": {
                      "usePreemptive": "true"
                    }
                  }
                }
              }
            ]
          mirrors: >
            [
              {
                "id": "nexus",
                "mirrorOf": "!my-org-snapshots,*",
                "url": "http://redacted/nexus/content/groups/public"
              }
            ]
          profiles: >
            [
              {
                "id": "foo.profile",
                "name": "foo.profile",
                "url": "http://foo.bar.profile",
                "properties": {
                  "foo": "property-1",
                  "bar": "property-2"
                }
              }
            ]
          plugin_groups: >
            [
              "some.plugin.group.id",
              "some.other.plugin.group.id"
            ]
          proxies: >
            [
              {
                "id": "foo-proxy",
                "active": "true",
                "protocol": "http",
                "host": "https://proxy.example.com",
                "port": "443",
                "username": "foo",
                "password": "bar",
                "nonProxyHosts": "noproxy1.example.com|noproxy2.example.com"
              }
            ]
          active_profiles: >
            [
              "some-profile"
            ]
          output_file: .m2/settings.xml

      - name: 'Determine image tags'
        if: env.IMAGE_TAGS == ''
        run: |
          echo "IMAGE_TAGS=latest ${GITHUB_SHA::12}" | tee -a $GITHUB_ENV

      - name: 'Build'
        run: mvn -X clean package

      - name: 'Install oc'
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

      # https://github.com/redhat-actions/oc-login#readme
      - name: 'Log in to OpenShift'
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ env.OPENSHIFT_SERVER }}
          openshift_token: ${{ env.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}

      # https://github.com/redhat-actions/oc-login#readme
      - name: 'Show projects'
        run: oc projects
